// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementAPI;

#nullable disable

namespace UserManagementAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250901102713_AddedUserPointer")]
    partial class AddedUserPointer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("UserManagementAPI.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Name = "Information Technology",
                            Type = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Name = "Human Resources",
                            Type = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Name = "Finance",
                            Type = "Finance"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Name = "Marketing",
                            Type = "Marketing"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DepartmentId = 1,
                            Email = "alice@company.com",
                            FullName = "Alice Johnson"
                        },
                        new
                        {
                            UserId = 2,
                            DepartmentId = 2,
                            Email = "bob@company.com",
                            FullName = "Bob Smith"
                        },
                        new
                        {
                            UserId = 3,
                            DepartmentId = 3,
                            Email = "charlie@company.com",
                            FullName = "Charlie Brown"
                        },
                        new
                        {
                            UserId = 4,
                            DepartmentId = 1,
                            Email = "diana@company.com",
                            FullName = "Diana Prince"
                        },
                        new
                        {
                            UserId = 5,
                            DepartmentId = 4,
                            Email = "ethan@company.com",
                            FullName = "Ethan Hunt"
                        });
                });

            modelBuilder.Entity("UserManagementAPI.Models.User", b =>
                {
                    b.HasOne("UserManagementAPI.Models.Department", null)
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserManagementAPI.Models.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
